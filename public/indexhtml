<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Ayanfe Chatify</title>
  <link rel="icon" type="image/x-icon" href="https://i.ibb.co/y01QqZQ/mrfrankofc.jpg">
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
  <style>
    /* Your existing CSS remains unchanged */
  </style>
</head>
<body>
  <div class="container">
    <div class="username-form" id="username-form">
      <h1>Welcome to Chatify</h1>
      <input type="text" id="username-input" placeholder="Enter your username">
      <input type="file" id="profile-picture-input" accept="image/*" required>
      <button onclick="setUsername()">Join Chat</button>
    </div>

    <div class="chat-container" id="chat-container">
      <div class="chat-header">Chat Room</div>
      <div class="online-users">
        <h3>Online Users:</h3>
        <ul id="online-users-list"></ul>
      </div>
      <div class="chat-messages" id="chat-messages"></div>
      <div class="loading" id="loading">Loading chat history...</div> <!-- Loading animation -->
      <div class="chat-input">
        <input type="text" id="message-input" placeholder="Type a message..." oninput="handleTyping()">
        <button onclick="sendMessage()">Send</button>
      </div>
      <div id="typing-indicator" class="typing-indicator"></div>
    </div>
  </div>

  <footer>
    All rights reserved Ayanfe 2022-<span id="current-year"></span>
  </footer>

  <button class="dark-mode-toggle" onclick="toggleDarkMode()">
    <i class="fas fa-moon"></i>
  </button>

  <script src="/socket.io/socket.io.js"></script>
  <script>
    const socket = io();

    const usernameForm = document.getElementById('username-form');
    const chatContainer = document.getElementById('chat-container');
    const onlineUsersList = document.getElementById('online-users-list');
    const chatMessages = document.getElementById('chat-messages');
    const messageInput = document.getElementById('message-input');
    const profilePictureInput = document.getElementById('profile-picture-input');
    const currentYearSpan = document.getElementById('current-year');
    const loading = document.getElementById('loading');
    const typingIndicator = document.getElementById('typing-indicator');

    currentYearSpan.textContent = new Date().getFullYear();

    function toggleDarkMode() {
      document.body.classList.toggle('dark-mode');
    }

    function setUsername() {
      const username = document.getElementById('username-input').value.trim();
      const profilePicture = profilePictureInput.files[0];
      if (username && profilePicture) {
        const reader = new FileReader();
        reader.onload = function (e) {
          const profilePictureUrl = e.target.result;
          socket.emit('setUsername', { username, profilePictureUrl });
          usernameForm.style.display = 'none';
          loading.style.display = 'flex';
          chatContainer.style.display = 'flex';
        };
        reader.readAsDataURL(profilePicture);
      } else {
        alert('Please enter a username and choose a profile picture.');
      }
    }

    function handleTyping() {
      socket.emit('typing');
    }

    socket.on('welcome', (message) => {
      const welcomeMessage = document.createElement('div');
      welcomeMessage.classList.add('message');
      welcomeMessage.textContent = message;
      chatMessages.appendChild(welcomeMessage);
    });

    socket.on('message', (data) => {
      const messageElement = document.createElement('div');
      messageElement.classList.add('message');
      messageElement.style.backgroundColor = data.color;
      messageElement.innerHTML = `
        <img src="${data.profilePictureUrl || 'https://via.placeholder.com/30'}" alt="Profile Picture" style="width: 30px; height: 30px; border-radius: 50%; margin-right: 10px;">
        <strong>${data.username}:</strong> ${data.message}
      `;
      chatMessages.appendChild(messageElement);
      chatMessages.scrollTop = chatMessages.scrollHeight;
    });

    socket.on('updateOnlineUsers', (users) => {
      onlineUsersList.innerHTML = users.map(user => `<li>${user}</li>`).join('');
    });

    socket.on('loadChatHistory', (messages) => {
      messages.forEach((data) => {
        const messageElement = document.createElement('div');
        messageElement.classList.add('message');
        messageElement.style.backgroundColor = data.color;
        messageElement.innerHTML = `
          <img src="${data.profilePictureUrl || 'https://via.placeholder.com/30'}" alt="Profile Picture" style="width: 30px; height: 30px; border-radius: 50%; margin-right: 10px;">
          <strong>${data.username}:</strong> ${data.message}
        `;
        chatMessages.appendChild(messageElement);
      });
      chatMessages.scrollTop = chatMessages.scrollHeight;
      loading.style.display = 'none';
    });

    socket.on('typing', (username) => {
      typingIndicator.textContent = `${username} is typing...`;
      setTimeout(() => {
        typingIndicator.textContent = '';
      }, 3000);
    });

    function sendMessage() {
      const message = messageInput.value.trim();
      if (message) {
        socket.emit('message', { username, message });
        messageInput.value = '';

        if (message.startsWith('Ai:')) {
          fetch(`https://yt-video-production.up.railway.app/gemini-1.5-pro?ask=${encodeURIComponent(message)}`)
            .then(res => res.json())
            .then(data => {
              socket.emit('message', { username: 'AI', message: data.response });
            })
            .catch(err => console.error('AI API Error:', err));
        }
      }
    }
  </script>
</body>
</html>
